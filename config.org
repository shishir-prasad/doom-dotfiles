#+TITLE: Config
#+PRIORITIES: header-args :tangle config.el

* User Details
$DOOMDIR/config.el -*- lexical-binding: t; -*-
Place your private configuration here! Remember, you do not need to run 'door
sync' after modifying this file!
Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets.

#+begin_src elisp

(setq user-full-name "Shishir Prasad"
      user-mail-address "shishir@ibrew-hub.com")

#+end_src

* Theme
Set doom Theme
#+begin_src elisp
(setq doom-theme 'doom-acario-dark)
#+end_src
* Org
If you use `org' and don't want your org files in the default location below,
change `org-directory'. It must be set before org loads!
#+begin_src elisp

(defun org-journal-file-header-func (time)
  "Custom function to create journal header."
  (concat
   (pcase org-journal-file-type
     (`daily "#+TITLE: Daily Journal\n#+STARTUP: showeverything")
     (`weekly "#+TITLE: Weekly Journal\n#+STARTUP: folded")
     (`monthly "#+TITLE: Monthly Journal\n#+STARTUP: folded")
     (`yearly "#+TITLE: Yearly Journal\n#+STARTUP: folded"))))


(after! org
  (require 'org-bullets)  ; Nicer bullets in org-mode
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
  (setq org-directory "~/org/"
        org-agenda-files '("~/org/gtd/projects.org"
                           "~/org/gtd/meetings.org"
                           "~/org/gtd/home.org"
                           "~/org/gtd/work.org"
                           "~/org/gtd/ideas.org"
                           "~/org/gtd/inbox.org")
        org-default-notes-file (expand-file-name "notes.org" org-directory)
        org-ellipsis " â–¼ "
        org-log-done 'time
        org-journal-dir "~/org/gtd/journal/"
        org-journal-enable-agenda-integration t
        org-journal-file-type 'monthly
        org-journal-file-format "%B,%Y.org"
        org-journal-carryover-items "TODO=\"TODO\"|TODO=\"NEXT\"|TODO=\"PROJ\"|TODO=\"STRT\"|TODO=\"WAIT\"|TODO=\"HOLD\""
        org-journal-date-format "%B %d, %Y (%A)"

        org-journal-file-header 'org-journal-file-header-func
        org-hide-emphasis-markers t
        org-todo-keywords
        '((sequence
           "TODO(t)"  ; A task that needs doing & is ready to do
           "PROJ(p)"  ; Project with multiple task items.
           "NEXT(n)"  ; Task is next to be worked on.
           "WAIT(w)"  ; Something external is holding up this task
           "|"
           "DONE(d)"  ; Task successfully completed
           "KILL(k)")))) ; Task was cancelled, aborted or is no longer applicable
#+end_src

* Line Numbers
This determines the style of line numbers in effect. If set to `nil', line
numbers are disabled. For relative line numbers, set this to `relative'.

#+begin_src elisp

(setq display-line-numbers-type 'relative)


#+end_src
* Dired File
The configurations for Dired file manager and kebindings are mentioned here
#+begin_src elisp

(map! :leader
 (:prefix-map("d" . "Dired")
      :desc "Dired"
      "d" #'dired
      :leader
      :desc "Dired jump to current"
      "j" #'dired-jump
      (:after dired
       (:map dired-mode-map
        :leader
        :desc "Peep-dired image previews"
        "p" #'peep-dired
        :leader
        :desc "Dired view file"
        "v" #'dired-view-file))))
(evil-define-key 'normal peep-dired-mode-map (kbd "j") 'peep-dired-next-file
  (kbd "k") 'peep-dired-prev-file)
(add-hook 'peep-dired-hook 'evil-normalize-keymaps)


;(setq doom-theme 'doom-dracula)
;(setq doom-dracula-brighter-comments t)
#+end_src
* Encoding Format
Set utf-8 as default encoding format
#+begin_src elisp
(set-charset-priority 'unicode)
(setq locale-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)
(setq default-process-coding-system '(utf-8-unix . utf-8-unix))
#+end_src
* Escape sequence
#+begin_src elisp
(after! evil-escape
  (setq evil-escape-key-sequence "tn"))

#+end_src
* Prettier Config
#+begin_src elisp
(add-hook 'after-init-hook #'global-prettier-mode)
#+end_src
* Move line up and down
#+begin_src elisp
(global-set-key [M-S-up]  'move-line-up)
(global-set-key [M-S-down]  'move-line-down)
#+end_src
